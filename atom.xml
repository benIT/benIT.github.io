<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/atom.xml" rel="self"/>
    <link href="/"/>
    <updated>2020-05-22T09:02:26+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[linux basics: quotas]]></title>
            <link href="/blog/2020/04/17/linux-quotas"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-quotas</id>
            <content type="html"><![CDATA[<h2 id="quotas">quotas</h2>

<p>Quota specifications:</p>

<ul>
<li>number of inode (inode: pointer to file)</li>
<li>number of block</li>
</ul>

<p>Types:</p>

<ul>
<li>hard: block user when quota is reached</li>
<li>soft: inform user that is about to reached the quota</li>
</ul>

<h3 id="install-quotas">install quotas</h3>

<pre><code>apt install quota
</code></pre>

<h3 id="enable-quotas">Enable quotas</h3>

<h4 id="%C2%A0check-config-supports-quota">Â Check config supports quota</h4>

<pre><code>grep QUOTA /boot/config-*
</code></pre>

<p>=></p>

<pre><code>CONFIG_NFT_QUOTA=m
CONFIG_NETFILTER_XT_MATCH_QUOTA=m
CONFIG_XFS_QUOTA=y
CONFIG_QUOTA=y
CONFIG_QUOTA_NETLINK_INTERFACE=y
CONFIG_PRINT_QUOTA_WARNING=y
# CONFIG_QUOTA_DEBUG is not set
CONFIG_QUOTA_TREE=m
CONFIG_QUOTACTL=y
CONFIG_QUOTACTL_COMPAT=y
</code></pre>

<h4 id="mount-options">Mount options</h4>

<p>Check quota are enable in /etc/fstab at the 4th column: <code>usrquota</code>, <code>grpquota</code> option must be specified:</p>

<pre><code>UUID=e248b430-aed3-4586-8a9f-2444515376e7 /               ext4    errors=remount-ro,acl,usrquota,grpquota 0 
</code></pre>

<h3 id="enable">Enable</h3>

<pre><code>quotacheck -ugm /
</code></pre>

<p>check quota files have been created:</p>

<pre><code>ls /aquota.*
/aquota.group  /aquota.user
</code></pre>

<p>this will fix the following error: <code>edquota: Cannot open quotafile //aquota.user: No such file or directory No filesystems with quota detected.</code></p>

<p>turn it on:</p>

<pre><code>quotaon -v /
</code></pre>

<p>=></p>

<pre><code>/dev/sda1 [/]: group quotas turned on
/dev/sda1 [/]: user quotas turned on
</code></pre>

<h3 id="quota-commands">Quota commands</h3>

<p>check quotas:</p>

<pre><code>quotacheck -a
</code></pre>

<p>display all quotas:</p>

<pre><code>repquota -a 
</code></pre>

<p>edit quota:</p>

<p>** do not edit <code>/etc/quotatab</code> file directly but use:</p>

<pre><code>edquota -u foo
edquota -g foogrp
</code></pre>

<h3 id="edit-grace-period">edit grace period</h3>

<p>grace period is the quantity of time that the system allows you to exceed the soft limit without blocking you.
After that, user will be considered as he exceeded the hard limit.</p>

<pre><code>edquota -t
</code></pre>

<h3 id="service">Service</h3>

<pre><code>/etc/init.d/quota start
service quota start
</code></pre>

<h2 id="test-it-%21">Test it !</h2>

<h3 id="as-root">As root</h3>

<pre><code>Disk quotas for user foo (uid 1001):
  Filesystem                   blocks       soft       hard     inodes     soft     hard
  /dev/sda1                        16          0          0          4        5        6          
</code></pre>

<p>Here, our foo user has:
* currently consumed 4 inodes on the FS
* a quota soft limit set to 5 inodes
* a quota hard  limit set to 6 inodes</p>

<h3 id="as-final-user">As final user</h3>

<h4 id="reach-the-soft-limit">Reach the soft limit</h4>

<pre><code>foo@debian:~$ touch file 
foo@debian:~$ touch file 2
sda1: warning, user file quota exceeded.
</code></pre>

<h4 id="reach-the-hard-limit">Reach the hard limit</h4>

<pre><code>foo@debian:~$ touch file 3
sda1: write failed, user file limit reached.
touch: cannot touch '3': Disk quota exceeded
</code></pre>

<h3 id="report">Report</h3>

<pre><code>root@debian:~# repquota /
</code></pre>

<p>=></p>

<pre><code>*** Report for user quotas on device /dev/sda1
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      -- 3645544       0       0         113922     0     0       
man       --    1496       0       0            157     0     0       
lp        --   11980       0       0              1     0     0       
_apt      --      12       0       0              3     0     0       
systemd-timesync --       4       0       0              2     0     0       
avahi-autoipd --       4       0       0              1     0     0       
speech-dispatcher --       4       0       0              1     0     0       
colord    --       8       0       0              2     0     0       
lightdm   --      32       0       0              8     0     0       
ben       --   56020       0       0           1295     0     0       
foo       -+      16       0       0              6     5     6  6days
</code></pre>

<h2 id="resources">Resources</h2>

<ul>
<li>https://www.digitalocean.com/community/tutorials/how-to-set-filesystem-quotas-on-debian-10</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 4 - umask]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-4"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-4</id>
            <content type="html"><![CDATA[<h2 id="print-umask">print umask</h2>

<pre><code>umask -S
u=rwx,g=rwx,o=rx

umask -p
umask 0002
</code></pre>

<p>default rights when a file is created are:</p>

<ul>
<li>file: 0666</li>
<li>folder : O777</li>
</ul>

<p><strong>The calculated rights for new files are the default rights - the umask: 0666-0002=0664</strong></p>

<pre><code>touch umasktest
ls -l umasktest 
-rw-rw-r-- 1 ordinateur ordinateur 0 avril 21 14:30 umasktest
</code></pre>

<h2 id="modify-umask">modify umask</h2>

<pre><code>umask 0022
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 3 - ACL]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-3"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-3</id>
            <content type="html"><![CDATA[<p>ACL usage: when POSIX rights are too limited. Check ACL support is enabled:</p>

<pre><code>grep ACL /boot/config* | grep -i ext4
</code></pre>

<p>install package:</p>

<pre><code>apt install acl
</code></pre>

<p>Enable if needed in <code>/etc/fstab</code>, with option <code>acl</code></p>

<p>create a test file: <code>touch test</code>
create a test user: <code>adduser testuser</code>
create a group user: <code>groupadd testgroup</code></p>

<h2 id="getfacl">getfacl</h2>

<pre><code>getfacl test

# file: test
# owner: root
# group: root
user::rw-
group::r--
other::r--
</code></pre>

<h2 id="setfacl">setfacl</h2>

<p>Let's say we want to give an extra <code>rw</code> permissions to our <code>testuser</code> without using POSIX rights:</p>

<pre><code>setfacl -m u:testuser:rw test
</code></pre>

<p>check that:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
mask::rw-
other::r--
</code></pre>

<p>Let's say we want to give an extra <code>rwx</code> permissions to our <code>testgroup</code> without using POSIX rights:</p>

<pre><code>setfacl -m g:testgroup:rwx test
</code></pre>

<p>check that:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<p>It is possible to edit POSIX rights without specifying user or group:</p>

<pre><code>setfacl -m g::r test
getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<p>same for user:</p>

<pre><code>setfacl -m u::r test
getfacl test
# file: test
# owner: root
# group: root
user::r--
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<h3 id="acl-on-folder">ACL on folder</h3>

<ul>
<li>-d: inheritance. file in folder will inherit folder ACL</li>
<li><p>-R: recursive</p>

<p>mkdir test-folder
setfacl -dm u:testuser:rwx test-folder/</p></li>
</ul>

<p>check:</p>

<pre><code>getfacl test-folder/
# file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
default:user::rwx
default:user:testuser:rwx
default:group::r-x
default:mask::rwx
default:other::r-x
</code></pre>

<p>check child file inherits ACL from parent folder:</p>

<pre><code>touch test-folder/a
getfacl test-folder/a
</code></pre>

<p>=></p>

<pre><code># file: test-folder/a
# owner: root
# group: root
user::rw-
user:testuser:rwx       #effective:rw-
group::r-x          #effective:r--
mask::rw-
other::r--
</code></pre>

<p>Recursive mode is not linked to file.</p>

<h3 id="delete-acl">Delete ACL</h3>

<h4 id="delete-all-acls">Delete all ACLs</h4>

<pre><code>setfacl -b test
</code></pre>

<p>There is no more ACL rights, only POSIX rights:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::r--
group::r--
other::r--
</code></pre>

<h4 id="delete-default-acls-with-%60-k%60">Delete default ACLs with <code>-k</code></h4>

<pre><code>getfacl test-folder/
# file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
default:user::rwx
default:user:testuser:rwx
default:group::r-x
default:mask::rwx
default:other::r-x
</code></pre>

<p>delete: <code>setfacl -k test-folder/</code>
check: <code>getfacl test-folder/</code></p>

<pre><code># file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
</code></pre>

<h4 id="delete-a-particular-acl-with-%60-x%60">Delete a particular ACL with <code>-x</code></h4>

<pre><code>setfacl -x u:testuser test
</code></pre>

<h2 id="mask">Mask</h2>

<p>A mask is a logical AND operator. The effective rights will result of the logical AND operation of the right mask and the user or group ACL. Check the <code>#effective:</code> in <code>getfacl</code> output:</p>

<p>Let a <code>rwx</code> ACL to <code>testuser</code>:</p>

<pre><code>setfacl -m u:testuser:rwx test
</code></pre>

<p>Let a <code>rw</code> mask ACL:</p>

<pre><code>setfacl -m m::rw test
</code></pre>

<p>Check rights:</p>

<pre><code> getfacl test
# file: test
# owner: root
# group: root
user::r--
user:testuser:rwx               #effective:rw-
group::r--
mask::rw-
other::r--
</code></pre>

<p>For testuser:</p>

<pre><code>user:testuser:rwx               #effective:rw
</code></pre>

<p>The effective rights are the result of the logical AND operation, thus <code>rw</code></p>

<h2 id="acl-hierarchy">ACL hierarchy</h2>

<p>mask > user ACL > group ACL > owner group ACL > POSIX rights</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 2 - advanced]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-2"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-2</id>
            <content type="html"><![CDATA[<h2 id="suid%3A-set-user-identification-permission">SUID: Set-user Identification permission</h2>

<p>usage:</p>

<pre><code>chmod u+s prg.sh
chmod 4[rwx][rwx][rwx] prg.sh
</code></pre>

<p>Specfic to executable file.</p>

<p>When a command or script with SUID bit set is run, its effective UID becomes that of the owner of the file, rather than of the user who is running it.</p>

<p>The setuid permission displayed as an âsâ in the ownerâs execute field.</p>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
When a command or script with SUID bit set is run, its effective UID becomes that of the owner of the file, rather than of the user who is running it.</p>

<pre><code>chmod u+s prg.sh
chmod 4[rwx][rwx][rwx] prg.sh
</code></pre>

<p>create a file:</p>

<pre><code>root@raspbeeerry:/home/pi# touch prg.sh
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rw-r--r-- 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>add execution right for all:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod a+x prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwxr-xr-x 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>set SUID, note the lower 's' when X right:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod u+s prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwsr-xr-x 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>remove execution right for all, note the upper 'S' when no X right:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod a-x prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwSr--r-- 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<h2 id="sgid%3A-set-group-identification-permission">SGID: Set-group identification permission</h2>

<p>usage:</p>

<pre><code>chmod g+s prg.sh
chmod 2[rwx][rwx][rwx] prg.sh
</code></pre>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
When SGID permission is set on a directory, files created in the directory belong to the group of which the directory is a member.
â For example if a user having write permission in the directory creates a file there, that file is a member of the same group as the directory and not the userâs group.
â This is very useful in creating shared directories.
â The setgid permission displays as an âsâ in the groupâs execute field.</p>

<h2 id="rights-on-folder">Rights on folder</h2>

<p>*r: allow to list
*w: allow to create/delete files
*x: allow to traverse</p>

<h2 id="sticky-bit-permission">Sticky bit permission</h2>

<p>usage:</p>

<pre><code>chmod +t folder
chmod 1[rwx][rwx][rwx] prg.sh
</code></pre>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
The sticky bit is primarily used on shared directories.
* without the sticky bit : user with Write permission on a folder can create/delete other users files
* with the sticky bit : user with Write permission on a folder are allowed to create new files but not to delete files</p>

<p>Example:</p>

<p>as root, create a folder with sticky bit:</p>

<pre><code>root@raspbeeerry:/home/pi# mkdir test-folder
root@raspbeeerry:/home/pi# chmod a+w test-folder/
root@raspbeeerry:/home/pi# ls -ld test-folder/
drwxrwxrwx 2 root root 4096 Apr 16 14:53 test-folder/
root@raspbeeerry:/home/pi# touch test-folder/a
root@raspbeeerry:/home/pi# ls -l permissions.txt ^C
root@raspbeeerry:/home/pi# ^C
root@raspbeeerry:/home/pi# chmod +t test-folder/
</code></pre>

<p>as another user, let's try to create/delete file inside the folder with the sticky bit:</p>

<pre><code>pi@raspbeeerry ~ $ touch test-folder/b
pi@raspbeeerry ~ $ ls -l test-folder/
total 0
-rw-r--r-- 1 root root 0 Apr 16 14:58 a
-rw-r--r-- 1 pi   pi   0 Apr 16 14:59 b
pi@raspbeeerry ~ $ rm test-folder/a
rm: remove write-protected regular empty file 'test-folder/a'? 
</code></pre>

<p>as root, let's remove the sticky bit:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod -t test-folder/
</code></pre>

<p>as another user, retry to delete file created by another user:</p>

<pre><code>pi@raspbeeerry ~ $ rm -f  test-folder/a
@raspbeeerry ~ $ ls -l test-folder/
total 0
-rw-r--r-- 1 pi pi 0 Apr 16 14:59 b
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 1 - POSIX rights]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-1"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-1</id>
            <content type="html"><![CDATA[<h2 id="file-ownership">file ownership</h2>

<p>File ownership is managed by a user owner and a group owner.
See <code>ls -l</code> or <code>ls -n</code></p>

<p>Examples:</p>

<pre><code>chown user:group file #change owner and group
chown user file # change only owner
chown :group file #change only group, same as chgrp command
</code></pre>

<h2 id="linux-posix-rights">Linux POSIX rights</h2>

<p>POSIX is a standard.</p>

<h2 id="list-rights">List rights</h2>

<pre><code>ls -l
</code></pre>

<p>Type codes:</p>

<ul>
<li>-: file</li>
<li>d: folder</li>
<li>l: symlink</li>
<li>p: pipe. used to make 2 programs communicate</li>
<li>s: socket. used to make 2 programs communicate + network management + bidirectional</li>
<li>b: block device, ie write block by block</li>
<li>c: character device, ie write char by char</li>
</ul>

<p>9 bits: 3 User + 3 Group + 3 Other</p>

<h2 id="chmod">chmod</h2>

<ul>
<li>u: for user</li>
<li>g: for group</li>
<li>o: for others</li>
<li><p>a: for all</p></li>
<li><p>+: add right</p></li>
<li>-: remove right</li>
<li><p>=: set right</p></li>
<li><p>r: read. 2^2 => 4</p></li>
<li>w: write.2^1 => 2</li>
<li><p>x: execute.2^0 => 1</p>

<p>chmod u+r,g-r file.txt
chmod a=rwx file.txt
chmod 740 file.txt</p></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 10 -  File System Summary]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-10"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-10</id>
            <content type="html"><![CDATA[<ul>
<li>partitioning a disk means divide it into several spaces: see <code>fdisk</code> or <code>parted</code> </li>
<li>formatting means creating a FS on partition: see <code>mkfs</code></li>
<li>FS can  be analysed with <code>dumpe2fs</code>, tuned with <code>tune2fs</code> </li>
<li>FS can  be checked with <code>fsck</code> </li>
<li>mount means attaching a device in a particular folder of the linux tree with <code>mount</code></li>
<li>FS mount can be automated with <code>/etc/fstab</code> file</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 9 - mount FS]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-9"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-9</id>
            <content type="html"><![CDATA[<h3 id="mount">mount</h3>

<p>mounting a FS means associate it to the linux tree, in a particular folder.</p>

<p>From man:</p>

<p>All files accessible in a Unix system are arranged in one big tree, the
file hierarchy, rooted at /.  These files can be spread out  over  sevâ
eral  devices.  The mount command serves to attach the filesystem found
on some device to the big file tree.</p>

<pre><code> mkdir -p /mnt/test
 mount /dev/sdb1 /mnt/test
 cd /mnt/test/
 touch f1 f2 f3
 umount /mnt/test 
 mount /dev/sdb1 /mnt/test
 ls /mnt/test/


mount -a: mount all FS /etc/fstab 
</code></pre>

<ul>
<li>-r: ro</li>
<li>-t ext4: specify FS ext type</li>
<li>-L alabel: mount the FS matching the given label</li>
<li>-U aUUID: mount the FS matching the given UUID</li>
</ul>

<h3 id="list-mounted-fs">list mounted FS</h3>

<pre><code>mount -l 
</code></pre>

<h3 id="mount-options">mount options</h3>

<pre><code>mount -o auto
</code></pre>

<ul>
<li>remount    </li>
<li>ro</li>
<li>rw</li>
<li>loop: for loopback block device    </li>
<li>auto/noauto: auto mount the FS at startup or mount -a</li>
<li>user: specify user allowed to mount/unmount the FS</li>
</ul>

<p>mount FS in RO mode:</p>

<pre><code> mount -o ro /dev/sdb1 /mnt/test/
 ls /mnt/test/
 f1  f2 f3  lost+found
 date &gt;&gt; /mnt/test/f1
 -su: /mnt/test/f1: Read-only file system
</code></pre>

<p>remount it in RW mode (without unmount!):</p>

<pre><code> mount -o rw,remount /dev/sdb1 /mnt/test/
 date &gt;&gt; /mnt/test/f1
</code></pre>

<h2 id="umount">umount</h2>

<pre><code>umount /dev/sdb1
</code></pre>

<p>or</p>

<pre><code>umount /mnt/test
</code></pre>

<ul>
<li>-a: all</li>
<li>-f: forcee</li>
<li>-r: if fails, remount in ro</li>
</ul>

<hr />

<h3 id="fstab">fstab</h3>

<p>/etc/fstab is used to automount FS</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 8 - FS tools]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-8"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-8</id>
            <content type="html"><![CDATA[<h2 id="fs-tools">FS tools</h2>

<h3 id="dumps-fs-informations%3A-dumpe2fs">dumps FS informations: dumpe2fs</h3>

<p>inode: means a file</p>

<pre><code>dumpe2fs -h /dev/sda1
</code></pre>

<p>outputs:</p>

<pre><code>Filesystem OS type:       Linux
Inode count:              9707520 #max number of files
Block count:              38812416 #max number of blocks
Reserved block count:     1940620
Free blocks:              33756140 #
Free inodes:              9545389  #
</code></pre>

<h3 id="tune-fs-settings%3A-tune2fs">tune FS settings: tune2fs</h3>

<p>!! never use on a mounted FS !!</p>

<p>tune2fs</p>

<h4 id="set-number-of-mount-before-checking-fs">set number of mount before checking FS</h4>

<pre><code>tune2fs -c 3 /dev/sdb1
</code></pre>

<p>=></p>

<pre><code>tune2fs 1.43.4 (31-Jan-2017)
Setting maximal mount count to 3
</code></pre>

<h4 id="set-time-interval-before-checking-fs">set time interval before checking FS</h4>

<pre><code>tune2fs -i 60d /dev/sdb1
</code></pre>

<p>=></p>

<pre><code>tune2fs 1.43.4 (31-Jan-2017)
Setting interval between checks to 5184000 seconds
</code></pre>

<p>check:</p>

<pre><code>dumpe2fs -h /dev/sdb1 | grep interval
</code></pre>

<h4 id="set-number-of-reserved-blocks">set number of reserved blocks</h4>

<p>prevent user to fullfill FS</p>

<pre><code>tune2fs -m 3 /dev/sdb1
</code></pre>

<p>=></p>

<pre><code>tune2fs 1.43.4 (31-Jan-2017)
Setting reserved blocks percentage to 3% (14667 blocks)
</code></pre>

<h4 id="debugfs">debugfs</h4>

<p>!! never use on a mounted FS !!</p>

<p>dumpe + tune FS</p>

<pre><code>debugfs -w /dev/sdb1
</code></pre>

<h5 id="fs-stats">FS stats</h5>

<p>stats</p>

<p>=></p>

<pre><code>Filesystem volume name:   &lt;none&gt;
Last mounted on:          /media/pi/CDROM
Filesystem UUID:          41d6539d-342e-4c2b-93f3-c941525d29b3
Filesystem magic number:  0xEF53
Filesystem revision #:    1 (dynamic)
Filesystem features:      has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum
Filesystem flags:         signed_directory_hash 
Default mount options:    user_xattr acl
Filesystem state:         clean
Errors behavior:          Continue
Filesystem OS type:       Linux
Inode count:              122400
Block count:              488907
Reserved block count:     14667
Free blocks:              471589
Free inodes:              122388
First block:              0
Block size:               4096
Fragment size:            4096
Group descriptor size:    64
Reserved GDT blocks:      238
</code></pre>

<h5 id="file-stats">File stats</h5>

<pre><code>stat test.txt
</code></pre>

<p>=></p>

<pre><code>Inode: 13   Type: regular    Mode:  0644   Flags: 0x80000
Generation: 1782112958    Version: 0x00000000:00000001
User:     0   Group:     0   Project:     0   Size: 5
File ACL: 0    Directory ACL: 0
Links: 1   Blockcount: 8
Fragment:  Address: 0    Number: 0    Size: 0
 ctime: 0x5e95a4c1:dc281c1c -- Tue Apr 14 13:55:45 2020
  atime: 0x5e95a4c1:dc281c1c -- Tue Apr 14 13:55:45 2020
   mtime: 0x5e95a4c1:dc281c1c -- Tue Apr 14 13:55:45 2020
   crtime: 0x5e95a4c1:dc281c1c -- Tue Apr 14 13:55:45 2020
   Size of extra inode fields: 32
   Inode checksum: 0x8be005b7
   EXTENTS:
   (0):33008
</code></pre>

<p>lsdel: list deleted file 
undel: undelete a file</p>

<h3 id="fsck">FSCK</h3>

<p>fsck - check and repair a Linux filesystem</p>

<p>!! never use on a mounted FS !!</p>

<pre><code>fsck -v /dev/sdb1
</code></pre>

<p>=></p>

<pre><code>fsck from util-linux 2.29.2
 e2fsck 1.43.4 (31-Jan-2017)
 /dev/sdb1: clean, 13/122400 files, 17319/488907 blocks (check after next mount)
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 7 - formatting]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-7"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-7</id>
            <content type="html"><![CDATA[<h2 id="formatting">Formatting</h2>

<p>BE CAREFUL: FORMATTING WILL ERASE ALL EXISTING DATA!</p>

<p>formatting means create a FS.</p>

<pre><code>mkfs.ext4 /dev/sdb1
mkfs -t ext4 /dev/sdb1
</code></pre>

<p>check a disk with mkfs, looks for bad element meaning the diskend of life:</p>

<pre><code>mkfs -t ext4 -c /dev/sdb1
</code></pre>

<p>-m: % reserved space to prevent user to fullfill disk.</p>

<h3 id="swap-formatting">SWAP formatting</h3>

<pre><code>mkswap /dev/sdbX #format
swapon /dev/sdbX #tell system to use it as swap
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 6 - partitioning with fdisk]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-6"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-6</id>
            <content type="html"><![CDATA[<h2 id="fdisk-command">fdisk command</h2>

<p>about partitions:</p>

<ul>
<li>Primary partition are limited to 4.</li>
<li>Extended partitions are container for logical partitions.</li>
</ul>

<p>fdisk "fixed disk" is the traditional linux partitioning utility.
Take a look at the following interactive output that creates:
* loop0p1  primary partition of 10M
* loop0p2  primary partition of 20M
* loop0p3  primary EXTENDED partition with all remaining space
* loop0p5  primary partition of 20M</p>

<pre><code>root@raspbeeerry:~# fdisk /dev/loop0 

Welcome to fdisk (util-linux 2.29.2).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.

Device does not contain a recognized partition table.
Created a new DOS disklabel with disk identifier 0xd1d1a072.

Command (m for help): m

Help:

DOS (MBR)
a   toggle a bootable flag
b   edit nested BSD disklabel
c   toggle the dos compatibility flag

Generic
d   delete a partition
F   list free unpartitioned space
l   list known partition types
n   add a new partition
p   print the partition table
t   change a partition type
v   verify the partition table
i   print information about a partition

Misc
m   print this menu
u   change display/entry units
x   extra functionality (experts only)

Script
I   load disk layout from sfdisk script file
O   dump disk layout to sfdisk script file

Save &amp; Exit
w   write table to disk and exit
q   quit without saving changes

Create a new label
g   create a new empty GPT partition table
G   create a new empty SGI (IRIX) partition table
o   create a new empty DOS partition table
s   create a new empty Sun partition table

Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Command (m for help): n
Partition type
   p   primary (0 primary, 0 extended, 4 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (1-4, default 1): 
First sector (2048-199999, default 2048): 
Last sector, +sectors or +size{K,M,G,T,P} (2048-199999, default 199999): +10M

Created a new partition 1 of type 'Linux' and of size 10 MiB.

Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start   End Sectors Size Id Type
/dev/loop0p1       2048 22527   20480  10M 83 Linux

Command (m for help): n
Partition type
   p   primary (1 primary, 0 extended, 3 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (2-4, default 2): 
First sector (22528-199999, default 22528): 
Last sector, +sectors or +size{K,M,G,T,P} (22528-199999, default 199999): +20M    

Created a new partition 2 of type 'Linux' and of size 20 MiB.

Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start   End Sectors Size Id Type
/dev/loop0p1       2048 22527   20480  10M 83 Linux
/dev/loop0p2      22528 63487   40960  20M 83 Linux

Command (m for help): w
The partition table has been altered.
Calling ioctl() to re-read partition table.
Re-reading the partition table failed.: Invalid argument

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe(8) or kpartx(8).

root@raspbeeerry:~# fdisk /dev/loop0 

Welcome to fdisk (util-linux 2.29.2).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start   End Sectors Size Id Type
/dev/loop0p1       2048 22527   20480  10M 83 Linux
/dev/loop0p2      22528 63487   40960  20M 83 Linux

Command (m for help): n
Partition type
   p   primary (2 primary, 0 extended, 2 free)
   e   extended (container for logical partitions)
Select (default p): e
Partition number (3,4, default 3): 
First sector (63488-199999, default 63488): 
Last sector, +sectors or +size{K,M,G,T,P} (63488-199999, default 199999): 

Created a new partition 3 of type 'Extended' and of size 66.7 MiB.

Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start    End Sectors  Size Id Type
/dev/loop0p1       2048  22527   20480   10M 83 Linux
/dev/loop0p2      22528  63487   40960   20M 83 Linux
/dev/loop0p3      63488 199999  136512 66.7M  5 Extended

Command (m for help): n
All space for primary partitions is in use.
Adding logical partition 5
First sector (65536-199999, default 65536): 
Last sector, +sectors or +size{K,M,G,T,P} (65536-199999, default 199999): +30M

Created a new partition 5 of type 'Linux' and of size 30 MiB.

Command (m for help): p
Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start    End Sectors  Size Id Type
/dev/loop0p1       2048  22527   20480   10M 83 Linux
/dev/loop0p2      22528  63487   40960   20M 83 Linux
/dev/loop0p3      63488 199999  136512 66.7M  5 Extended
/dev/loop0p5      65536 126975   61440   30M 83 Linux

Command (m for help): w
The partition table has been altered.
Calling ioctl() to re-read partition table.
Re-reading the partition table failed.: Invalid argument

The kernel still uses the old table. The new table will be used at the next reboot or after you run partprobe(8) or kpartx(8).

root@raspbeeerry:~# fdisk -l
Disk /dev/sda: 149.1 GiB, 160041885696 bytes, 312581808 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x6484e662

Device     Boot     Start       End   Sectors   Size Id Type
/dev/sda1  *         2048 310501375 310499328 148.1G 83 Linux
/dev/sda2       310503422 312580095   2076674  1014M  5 Extended
/dev/sda5       310503424 312580095   2076672  1014M 82 Linux swap / Solaris


Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start    End Sectors  Size Id Type
/dev/loop0p1       2048  22527   20480   10M 83 Linux
/dev/loop0p2      22528  63487   40960   20M 83 Linux
/dev/loop0p3      63488 199999  136512 66.7M  5 Extended
/dev/loop0p5      65536 126975   61440   30M 83 Linux
root@raspbeeerry:~# free
          total        used        free      shared  buff/cache   available
Mem:        1020528      100940      352364       27400      567224      753912
Swap:       1140728           0     1140728
root@raspbeeerry:~# fdisk -l
Disk /dev/sda: 149.1 GiB, 160041885696 bytes, 312581808 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x6484e662

Device     Boot     Start       End   Sectors   Size Id Type
/dev/sda1  *         2048 310501375 310499328 148.1G 83 Linux
/dev/sda2       310503422 312580095   2076674  1014M  5 Extended
/dev/sda5       310503424 312580095   2076672  1014M 82 Linux swap / Solaris


Disk /dev/loop0: 97.7 MiB, 102400000 bytes, 200000 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0xd1d1a072

Device       Boot Start    End Sectors  Size Id Type
/dev/loop0p1       2048  22527   20480   10M 83 Linux
/dev/loop0p2      22528  63487   40960   20M 83 Linux
/dev/loop0p3      63488 199999  136512 66.7M  5 Extended
/dev/loop0p5      65536 126975   61440   30M 83 Linux
</code></pre>

<p>todo : see GNU parted that is a most advanced partition editor</p>
]]></content>
        </entry>
    </feed>