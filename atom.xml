<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/atom.xml" rel="self"/>
    <link href="/"/>
    <updated>2019-09-19T14:50:53+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Run multiple php versions on the same server with PHP-FPM and apache2]]></title>
            <link href="/blog/2019/09/19/run-multiple-php-versions-same-server-with-fpm"/>
            <updated>2019-09-19T00:00:00+00:00</updated>
            <id>/blog/2019/09/19/run-multiple-php-versions-same-server-with-fpm</id>
            <content type="html"><![CDATA[<h2 id="purpose">Purpose</h2>

<p>The aim of this post is to run several php versions on the same server.</p>

<p>This installation has been performed on debian 9 stretch.</p>

<p>This post has been mainly inspired <a href="https://tecadmin.net/install-multiple-php-version-apache-ubuntu/">from this source</a></p>

<h2 id="about-%60php-fpm%60">About <code>php-fpm</code></h2>

<p>PHP-FPM (FastCGI Process Manager) allows communication between a webserver and a PHP process based on FastCGI protocol.</p>

<p>In this post, PHP-FPM listen to a socket file to communicate with apache.</p>

<h2 id="add-%60sury%60-repo-to-get-both-%60php-5.6%60-and-%60php7.x%60-packages">Add <code>sury</code> repo to get both <code>php-5.6</code> and <code>php7.x</code> packages</h2>

<p>Since debian strech did not have php5 packages, we have to add an extra repo to our apt sources.list to get those packages (<a href="https://stackoverflow.com/questions/46378017/install-php5-6-in-debian-9">source here</a>):</p>

<pre><code>apt-get install apt-transport-https lsb-release ca-certificates
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg --no-check-certificate
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" &gt; /etc/apt/sources.list.d/php.list
apt-get update
</code></pre>

<h2 id="about-the-apache2-library-that-communicates-with-php-fpm-process">About the apache2 library that communicates with php fpm process</h2>

<p>These libs are not required anymore: <code>libapache2-mod-fastcgi</code>, <code>libapache2-mod-fcgid</code> since there are now <code>proxy_fcgi</code> and <code>proxy</code> apache modules.</p>

<h3 id="apache2-modules">Apache2 modules</h3>

<pre><code>a2enmod actions alias proxy_fcgi
</code></pre>

<h2 id="install-php-fpm-module-for-php-5.6">Install php fpm module for php 5.6</h2>

<pre><code>apt-get install php5.6-fpm
</code></pre>

<p>Checkout in <code>/etc/php/5.6/fpm/pool.d/www.conf</code> the directive that contains the socket path where php-fpm is listening:</p>

<pre><code>listen = /run/php/php5.6-fpm.sock
</code></pre>

<h2 id="install-php-fpm-module-for-php-7.1">Install php fpm module for php 7.1</h2>

<pre><code>apt-get install php7.1-fpm
</code></pre>

<p>Checkout in <code>/etc/php/7.1/fpm/pool.d/www.conf</code> the directive that contains the socket path where php-fpm is listening:</p>

<pre><code>listen = /run/php/php7.1-fpm.sock
</code></pre>

<h2 id="test">Test</h2>

<h3 id="create-test-apps">Create test apps</h3>

<pre><code>mkdir -p /var/www/html/php5.6 /var/www/html/php7.1
echo "&lt;?php phpinfo(); ?&gt;" &gt; /var/www/php56/index.php
echo "&lt;?php phpinfo(); ?&gt;" &gt; /var/www/php71/index.php
</code></pre>

<h3 id="virtual-hosts">Virtual hosts</h3>

<pre><code>a2dissite 000-default.conf    
</code></pre>

<h3 id="edit-local-dns-file">Edit local DNS file</h3>

<p>Edit <code>/etc/hosts</code>:</p>

<pre><code>10.11.12.13 php56.test
10.11.12.13 php71.test
</code></pre>

<h4 id="php-5.6-virtual-host">PHP 5.6 virtual host</h4>

<pre><code>cp 000-default.conf php56.conf 
a2ensite php56.conf
</code></pre>

<p>Edit <code>/etc/apache2/sites-available/php56.conf</code>:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerName php56.test
    DocumentRoot /var/www/php56
    &lt;Directory /var/www/php56&gt;
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    &lt;/Directory&gt;
    &lt;FilesMatch \.php$&gt;
        # Apache 2.4.10+ can proxy to unix socket
        SetHandler "proxy:unix:/var/run/php/php5.6-fpm.sock|fcgi://localhost/"
    &lt;/FilesMatch&gt;
    ErrorLog ${APACHE_LOG_DIR}/php56-error.log
    CustomLog ${APACHE_LOG_DIR}/php56-access.log combined
&lt;/VirtualHost&gt;
</code></pre>

<p>Reload :</p>

<pre><code>systemctl reload apache2    
</code></pre>

<p>Check with your browser:</p>

<p><img src="/images/multiple-php-versions/56.png" alt="screenshot" /></p>

<h4 id="php-7.1-virtual-host">PHP 7.1 virtual host</h4>

<pre><code>cp 000-default.conf php71.conf
a2ensite php71.conf
</code></pre>

<p>Edit <code>/etc/apache2/sites-available/php71.conf</code>:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerName php56.test
    DocumentRoot /var/www/php56
    &lt;Directory /var/www/php56&gt;
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    &lt;/Directory&gt;
    &lt;FilesMatch \.php$&gt;
        # Apache 2.4.10+ can proxy to unix socket
        SetHandler "proxy:unix:/var/run/php/php7.1-fpm.sock|fcgi://localhost/"
    &lt;/FilesMatch&gt;
    ErrorLog ${APACHE_LOG_DIR}/php71-error.log
    CustomLog ${APACHE_LOG_DIR}/php71-access.log combined
&lt;/VirtualHost&gt;    
</code></pre>

<p>Reload :</p>

<pre><code>systemctl reload apache2    
</code></pre>

<p>Check with your browser:</p>

<p><img src="/images/multiple-php-versions/71.png" alt="screenshot" /></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP survival sheet]]></title>
            <link href="/blog/2019/07/12/php-survival-sheet"/>
            <updated>2019-07-12T00:00:00+00:00</updated>
            <id>/blog/2019/07/12/php-survival-sheet</id>
            <content type="html"><![CDATA[<h2 id="identify-different-%60php.ini%60-files">Identify different <code>php.ini</code> files</h2>

<p>This <code>find</code> command:</p>

<pre><code>find /etc -name php.ini 
</code></pre>

<p>returns:</p>

<pre><code>/etc/php/7.1/apache2/php.ini
/etc/php/7.1/cli/php.ini
</code></pre>

<h2 id="identify-loaded-php.ini-files-from-command-line">Identify loaded php.ini files from command line</h2>

<p>This command:</p>

<pre><code>php --ini
</code></pre>

<p>returns:</p>

<pre><code>Configuration File (php.ini) Path: /etc/php/7.1/cli
Loaded Configuration File:         /etc/php/7.1/cli/php.ini
Scan for additional .ini files in: /etc/php/7.1/cli/conf.d
Additional .ini files parsed:      /etc/php/7.1/cli/conf.d/10-mysqlnd.ini,
/etc/php/7.1/cli/conf.d/10-opcache.ini,
/etc/php/7.1/cli/conf.d/10-pdo.ini,
/etc/php/7.1/cli/conf.d/15-xml.ini,
...
</code></pre>

<h2 id="get-configuration-values-from-the-command-line">Get configuration values from the command line</h2>

<p>This command returns:</p>

<pre><code>php -i | grep upload_max_filesize
</code></pre>

<p>returns:</p>

<pre><code>upload_max_filesize =&gt; 2M =&gt; 2M
</code></pre>

<p>Common configuration to change in <code>php.ini</code> files:</p>

<pre><code>memory_limit
max_execution_time
max_input_time
post_max_size
upload_max_filesize

display_errors
html_errors
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Use your own fork with composer]]></title>
            <link href="/blog/2019/07/10/use-your-own-fork-with-composer"/>
            <updated>2019-07-10T00:00:00+00:00</updated>
            <id>/blog/2019/07/10/use-your-own-fork-with-composer</id>
            <content type="html"><![CDATA[<p>Resources:</p>

<ul>
<li>https://getcomposer.org/doc/04-schema.md#minimum-stability</li>
<li>https://stackoverflow.com/a/13500676/1632809</li>
</ul>

<h2 id="context">Context</h2>

<ul>
<li><p>Original project: <a href="https://github.com/KnpLabs/KnpGaufretteBundle">https://github.com/KnpLabs/KnpGaufretteBundle</a></p></li>
<li><p>My fork: <a href="https://github.com/benIT/KnpGaufretteBundle.git">https://github.com/benIT/KnpGaufretteBundle.git</a></p></li>
<li><p>My branch name: <code>benIT-gaufrette-1.0</code>. This one contains my commits.</p></li>
</ul>

<h2 id="composer">Composer</h2>

<p>My <code>composer.json</code> file that tracks my fork with ly branch.</p>

<p>Note: branch must be prefixed bt <code>dev-</code>. In this case: <code>dev-benIT-gaufrette-1.0</code>:</p>

<pre><code>{
  "name": "root/test-composer",
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/benIT/KnpGaufretteBundle.git"
    }
  ],
  "require": {
    "knplabs/knp-gaufrette-bundle": "dev-benIT-gaufrette-1.0"
  },
  "minimum-stability": "dev",
  "prefer-stable": true
}
</code></pre>

<p>The following directive :</p>

<pre><code>"minimum-stability": "dev",
"prefer-stable": true
</code></pre>

<p>prevents this kind of error related to minimum stability:</p>

<pre><code>  Problem 1
    - Installation request for knplabs/knp-gaufrette-bundle dev-benIT-gaufrette-1.0 -&gt; satisfiable by knplabs/knp-gaufrette-bundle[dev-benIT-gaufrette-1.0].
    - knplabs/knp-gaufrette-bundle dev-benIT-gaufrette-1.0 requires knplabs/gaufrette ^1.0 -&gt; satisfiable by knplabs/gaufrette[1.x-dev] but these conflict with your requirements or minimum-stability.
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Apache2 customize index page]]></title>
            <link href="/blog/2019/06/24/Apache2-customize-index-options"/>
            <updated>2019-06-24T00:00:00+00:00</updated>
            <id>/blog/2019/06/24/Apache2-customize-index-options</id>
            <content type="html"><![CDATA[<h2 id="customize-the-default-apache2-page-index-page">Customize the default apache2 page index page</h2>

<p>Apache2 index option is highly customizable. <a href="http://httpd.apache.org/docs/2.2/mod/mod_autoindex.html">See this official resource.</a></p>

<p>With the following code:</p>

<pre><code>&lt;VirtualHost *:80&gt;
        DocumentRoot /data/moodle_versions
    &lt;Directory /&gt;
        Options FollowSymLinks
        AllowOverride None
    &lt;/Directory&gt;
    &lt;Directory /data/moodle_versions/&gt;
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Require all granted
        allow from all
        AddDescription "Installation de moodle 3.5.4 LTS standard" moodle_354
        AddDescription "Installation de moodle 3.6.4 à des fins de test" moodle_364
        IndexStyleSheet "style.css"
        HeaderName header.html
        ReadmeName footer.html
        IndexIgnore *.html
        IndexIgnore *.css
    &lt;/Directory&gt;
        ServerAdmin webmaster@localhost
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
&lt;/VirtualHost&gt;
</code></pre>

<p>You can turn the default page:</p>

<p><img src="/images/apache2/default.png" alt="screenshot" /></p>

<p>to this one:</p>

<p><img src="/images/apache2/custom.png" alt="screenshot" /></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[RIP a md5 hash with john the ripper]]></title>
            <link href="/blog/2019/05/22/john-the-ripper-rip-md5-hash"/>
            <updated>2019-05-22T00:00:00+00:00</updated>
            <id>/blog/2019/05/22/john-the-ripper-rip-md5-hash</id>
            <content type="html"><![CDATA[<h2 id="rip-a-md5-hash">RIP a md5 hash</h2>

<pre><code>echo "ca50dfb151104b1ee005d68fa9a970ce" &gt; md5-to-crack
john --format=raw-md5 md5-to-crack --show
</code></pre>

<p>returns:</p>

<pre><code>john --format=raw-md5 md5-to-crack --show
?:dolorem

1 password hash cracked, 0 left
</code></pre>

<p>Password for hash <code>ca50dfb151104b1ee005d68fa9a970ce</code> is <code>dolorem</code></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Python keylogger]]></title>
            <link href="/blog/2019/05/07/python-keylogger"/>
            <updated>2019-05-07T00:00:00+00:00</updated>
            <id>/blog/2019/05/07/python-keylogger</id>
            <content type="html"><![CDATA[<h2 id="python-keylogger-package">Python keylogger package</h2>

<p>The job is already done and packaged with <a href="https://pypi.org/project/keylogger/">that Python package</a>.</p>

<h2 id="installation">Installation</h2>

<h3 id="python-3">Python 3</h3>

<p>This package works with Python 3, make sure you are using it:</p>

<pre><code>python --version
</code></pre>

<p>If python2 is set by default:</p>

<pre><code>sudo apt-get install python3-pip
</code></pre>

<h3 id="package">Package</h3>

<pre><code>pip install keylogger
</code></pre>

<p>If python2 is set by default:</p>

<pre><code>sudo -E pip3 install keylogger
</code></pre>

<h2 id="set-up-log-file">Set up log file</h2>

<pre><code>sudo touch /var/log/keylogger.log
</code></pre>

<h2 id="group-%26-ownership-for-log-file">Group &amp; ownership for log file</h2>

<pre><code>sudo groupadd spy
sudo usermod -a -G spy vagrant    
sudo chown root:spy /var/log/keylogger.log
sudo chmod 660 /var/log/keylogger.log
</code></pre>

<h2 id="usage">Usage</h2>

<pre><code>/home/vagrant/.local/bin/keylogger --log-file /var/log/keylogger.log --clean-file &amp;
</code></pre>

<h2 id="watch-log">Watch log</h2>

<pre><code>tail -f /var/log/keylogger.log 
</code></pre>

<p>Below the log generated by typing in firefox: <code>gmail.com</code> ang logging with <code>thisismymail@gmail.com</code>/<code>mypassword</code>:</p>

<pre><code>g
m
a
i
l
Shift_L
period
c
o
m
Return
t
h
i
s
i
s
m
y
m
a
i
l
Shift_L
Shift_L
Shift_L
[65027]
agrave
g
m
a
i
l
Shift_L
period
c
o
m
m
y
p
a
s
s
w
o
r
d
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[RIP linux user password with John the Ripper]]></title>
            <link href="/blog/2019/05/06/john-the-ripper-rip-linux-user-password"/>
            <updated>2019-05-06T00:00:00+00:00</updated>
            <id>/blog/2019/05/06/john-the-ripper-rip-linux-user-password</id>
            <content type="html"><![CDATA[<h2 id="add-a-new-user">Add a new user</h2>

<pre><code>sudo useradd -r foo
sudo passwd foo
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
</code></pre>

<h2 id="password-hash-file">Password hash file</h2>

<p>Linux user password hash are stored here: <code>/etc/shadow</code></p>

<h2 id="rip-it%21">Rip it!</h2>

<pre><code>sudo john /etc/shadow
Created directory: /root/.john
Using default input encoding: UTF-8
Loaded 3 password hashes with 3 different salts (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x])
Cost 1 (iteration count) is 5000 for all loaded hashes
Will run 5 OpenMP threads
Proceeding with single, rules:Wordlist
Press 'q' or Ctrl-C to abort, almost any other key for status
vagrant          (vagrant)
Warning: Only 3 candidates buffered for the current salt, minimum 20
needed for performance.
toor             (root)
Warning: Only 14 candidates buffered for the current salt, minimum 20
needed for performance.
Warning: Only 6 candidates buffered for the current salt, minimum 20
needed for performance.
Warning: Only 16 candidates buffered for the current salt, minimum 20
needed for performance.
Warning: Only 17 candidates buffered for the current salt, minimum 20
needed for performance.
Warning: Only 3 candidates buffered for the current salt, minimum 20
needed for performance.
Almost done: Processing the remaining buffered candidate passwords, if any
Warning: Only 15 candidates buffered for the current salt, minimum 20
needed for performance.
Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist
foobar           (foo)
3g 0:00:00:01 DONE 2/3 (2019-05-06 10:39) 1.570g/s 1806p/s 1808c/s 1808C/s 1234qwer..ford
Use the "--show" option to display all of the cracked passwords reliably
Session completed
</code></pre>

<h3 id="and-user-password-is...">And user password is...</h3>

<pre><code>foobar           (foo)
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[RIP a password protected archive with John the Ripper]]></title>
            <link href="/blog/2019/05/06/john-the-ripper-rip-archive"/>
            <updated>2019-05-06T00:00:00+00:00</updated>
            <id>/blog/2019/05/06/john-the-ripper-rip-archive</id>
            <content type="html"><![CDATA[<h2 id="install-kali">Install KALI</h2>

<p>First, <a href="https://www.kali.org/news/announcing-kali-for-vagrant/">intall a kali headless VM with vagrant</a>.</p>

<p>Grant large CPUs and RAM resources to the VM. For instance, in <code>Vagrantfile</code>:</p>

<pre><code># Create a forwarded port
config.vm.network "forwarded_port", guest: 80, host: 8080

# Create a private network. In VirtualBox, this is a Host-Only network
config.vm.network "private_network", ip: "192.168.33.101"

# VirtualBox specific settings
config.vm.provider "virtualbox" do |vb|
# Hide the VirtualBox GUI when booting the machine
vb.gui = false

# Customize the amount of memory on the VM:
vb.memory = "8192"
vb.cpus= "5"
end

# Provision the machine with a shell script
config.vm.provision "shell", inline: &lt;&lt;-SHELL
apt-get update
apt-get install -y crowbar
SHELL
end
</code></pre>

<h2 id="generate-a-test-archive">Generate a test archive</h2>

<pre><code>echo "foo bar" &gt; file.txt
zip -P pass archive.zip file.txt
</code></pre>

<p><strong>Thus, our archive is protected with the password: <code>pass</code></strong></p>

<p>Test password protection:</p>

<pre><code>unzip archive.zip 
Archive:  archive.zip
[archive.zip] file.txt password: 
</code></pre>

<h2 id="rip-archive.zip">RIP archive.zip</h2>

<h3 id="get-password-hash-with-zip2john">Get password hash with zip2john</h3>

<pre><code>zip2john archive.zip &gt; hash.txt
</code></pre>

<p>Prints :</p>

<pre><code>ver 1.0 efh 5455 efh 7875 archive.zip/file.txt PKZIP Encr: 2b chk, TS_chk, cmplen=20, decmplen=8, crc=13DDB427
</code></pre>

<h3 id="rip-hash">RIP hash</h3>

<pre><code>john hash.txt
</code></pre>

<p>Prints:</p>

<pre><code>Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 2 OpenMP threads
Proceeding with single, rules:Wordlist
Press 'q' or Ctrl-C to abort, almost any other key for status
Warning: Only 4 candidates buffered for the current salt, minimum 8
needed for performance.
Warning: Only 5 candidates buffered for the current salt, minimum 8
needed for performance.
Warning: Only 6 candidates buffered for the current salt, minimum 8
needed for performance.
Warning: Only 4 candidates buffered for the current salt, minimum 8
needed for performance.
Almost done: Processing the remaining buffered candidate passwords, if any
Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist
pass             (archive.zip/file.txt)
1g 0:00:00:00 DONE 2/3 (2019-05-06 09:53) 50.00g/s 2109Kp/s 2109Kc/s 2109KC/s 123456..Peter
Use the "--show" option to display all of the cracked passwords reliably
Session completed
</code></pre>

<h3 id="and-archive-password-is...">And archive password is...</h3>

<pre><code>pass             (archive.zip/file.txt)
</code></pre>

<h3 id="tips">Tips</h3>

<p>If you run <code>john</code> again, you will get:</p>

<pre><code>john hash.txt
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
No password hashes left to crack (see FAQ)
</code></pre>

<p>This means that the password has already been ripped, to print password check <code>.john/john.pot</code> file or use <code>--show</code> option:</p>

<pre><code>john hash.txt --show
archive.zip/file.txt:pass:file.txt:archive.zip::archive.zip

1 password hash cracked, 0 left
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Install REDMINE 3.4 with PgSQL and Apache2 on debian 9]]></title>
            <link href="/blog/2019/04/08/install-redmine"/>
            <updated>2019-04-08T00:00:00+00:00</updated>
            <id>/blog/2019/04/08/install-redmine</id>
            <content type="html"><![CDATA[<h2 id="resources">Resources</h2>

<ul>
<li>http://www.redmine.org/projects/redmine/wiki/howto_install_redmine_on_ubuntu_step_by_step</li>
<li>http://www.redmine.org/projects/redmine/wiki/redmineinstall</li>
</ul>

<h2 id="tested-version">Tested version</h2>

<pre><code>pg_config --version
PostgreSQL 11.2 (Debian 11.2-1.pgdg90+1)

ruby -v
ruby 2.3.3p222 (2016-11-21) [x86_64-linux-gnu]
</code></pre>

<h2 id="server-packages">Server packages</h2>

<h3 id="debian-packages">Debian packages</h3>

<pre><code>sudo apt-get install apache2 libapache2-mod-passenger ruby ruby-dev
sudo apt install postgresql-server-dev-all
</code></pre>

<h3 id="ruby-gems">Ruby GEMs</h3>

<pre><code>sudo -E gem install bundler -v 1.17.3
</code></pre>

<h2 id="database">Database</h2>

<pre><code>CREATE ROLE redmine LOGIN ENCRYPTED PASSWORD 'redmine' NOINHERIT VALID UNTIL 'infinity';
CREATE DATABASE redmine WITH ENCODING='UTF8' OWNER=redmine;
</code></pre>

<h2 id="app">App</h2>

<pre><code>tar -xzf redmine-3.4.10.tar.gz
cd redmine-3.4.10/
mv config/database.yml.example  config/database.yml
cd ..
mv redmine-3.4.10/ /var/www/redmine
</code></pre>

<p>Edit <code>config/database.yml.example</code> :</p>

<pre><code># PostgreSQL configuration example
production:
  adapter: postgresql
  database: redmine
  host: localhost
  username: redmine
  password: "redmine"
</code></pre>

<p>And rename it:</p>

<pre><code>mv config/database.yml.example  config/database.yml
</code></pre>

<h3 id="dependencies">Dependencies</h3>

<pre><code>bundle install --without development test
</code></pre>

<h3 id="setup">Setup</h3>

<pre><code>bundle exec rake generate_secret_token
RAILS_ENV=production bundle exec rake db:migrate
RAILS_ENV=production REDMINE_LANG=fr bundle exec rake redmine:load_default_data


mkdir -p tmp tmp/pdf public/plugin_assets
sudo chown -R www-data: files log tmp public/plugin_assets
sudo chmod -R 755 files log tmp public/plugin_assets
</code></pre>

<h2 id="apache2">Apache2</h2>

<h3 id="permissions-%26-ownership">Permissions &amp; ownership</h3>

<pre><code>sudo chown -R www-data: /var/www/
sudo chmod -R 755 /var/www/
</code></pre>

<h3 id="%C2%A0configuration-of-passenger.conf"> Configuration of passenger.conf</h3>

<p>Add the following line to <code>/etc/apache2/mods-available/passenger.conf</code>:</p>

<pre><code>PassengerDefaultUser www-data
</code></pre>

<h3 id="virtual-host">Virtual Host</h3>

<p>Edit <code>/etc/apache2/sites-enabled/000-default.conf</code>:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    #ServerName www.example.com
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/redmine/public/
        #MaxRequestLen 20971520

        &lt;Directory "/var/www/redmine/public"&gt;
                Options Indexes ExecCGI FollowSymLinks
                Order allow,deny
                Allow from all
                AllowOverride all
        &lt;/Directory&gt;

    ErrorLog ${APACHE_LOG_DIR}/redmine.error.log
    CustomLog ${APACHE_LOG_DIR}/redmine.access.log combined
&lt;/VirtualHost&gt;
</code></pre>

<h2 id="test">Test</h2>

<p>REDMINE should be running, login with <code>admin</code>/<code>admin</code>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[GIT rebase]]></title>
            <link href="/blog/2019/03/25/git-rebase"/>
            <updated>2019-03-25T00:00:00+00:00</updated>
            <id>/blog/2019/03/25/git-rebase</id>
            <content type="html"><![CDATA[<p>The aim of this post is to understand and get confortable with the git rebase command.</p>

<p><a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase">Definition</a>:</p>

<blockquote>
  <p>Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebasing is most useful and easily visualized in the context of a feature branching workflow.</p>
</blockquote>

<h2 id="create-a-git-repo">Create a git repo</h2>

<pre><code>mkdir rebase-test &amp;&amp; cd rebase-test
git init
</code></pre>

<p>output:</p>

<pre><code>Initialized empty Git repository in /home/bmn/rebase-test/.git/
</code></pre>

<h2 id="create-one-commit-on-%60master%60-branch">Create one commit on <code>master</code> branch</h2>

<pre><code>echo "first content from master" &gt;&gt; README.md
git add README.md 
git commit -m "first commit"
</code></pre>

<p>output:</p>

<pre><code>[master (root-commit) dc5f8d2] first commit
1 file changed, 1 insertion(+)
create mode 100644 README.md
</code></pre>

<h2 id="create-a-%60feature%60-branch-from-that-commit">Create a <code>feature</code> branch from that commit</h2>

<pre><code>git checkout -b feature
Switched to a new branch 'feature'
</code></pre>

<h2 id="create-one-commit-on-the-%60feature%60-branch">Create one commit on the <code>feature</code> branch</h2>

<pre><code>echo "introducing a new feature" &gt;&gt; README.md
</code></pre>

<p>Check file:</p>

<pre><code>cat README.md
</code></pre>

<p>output:</p>

<pre><code>first content from master
introducing a new feature


git commit -am "add feature line"
</code></pre>

<p>output:</p>

<pre><code>[feature 2212653] add feature line
1 file changed, 1 insertion(+)
</code></pre>

<h2 id="check-repo-graph">Check repo graph</h2>

<pre><code>nohup gitg &amp;
</code></pre>

<p><img src="/images/git-rebase/graph1.png" alt="screenshot" /></p>

<h2 id="create-a-new-commit-on-master-branch">Create a new commit on master branch</h2>

<pre><code>git checkout master 
Switched to branch 'master'
</code></pre>

<p>Check file:</p>

<pre><code>cat README.md 
first content from master

vim README.md # add a title line for example
cat README.md
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
</code></pre>

<p>Commit that:</p>

<pre><code>git commit -am "add master title"
</code></pre>

<p>output:</p>

<pre><code>[master ec82793] add master title
 1 file changed, 1 insertion(+)
</code></pre>

<blockquote>
  <p>Let's say that <code>master</code> branch has a new commit because work on master has been delivered. Let's rebase the <code>feature</code> branch to this new commit, to get the new content from <code>master</code> and play the commit from <code>feature</code> branch.</p>
</blockquote>

<h2 id="let%27s-rebase-the-%60feature%60-branch-on-the-%60master%60-branch">Let's rebase the <code>feature</code> branch on the <code>master</code> branch</h2>

<p>Let's move on our <code>feature</code> branch:</p>

<pre><code>git checkout feature 
</code></pre>

<p>output:</p>

<pre><code>Switched to branch 'feature'
</code></pre>

<p>And now the rebase operation itself:</p>

<pre><code>git rebase -i master 
</code></pre>

<p><img src="/images/git-rebase/rebase.png" alt="screenshot" /></p>

<p>output:</p>

<pre><code>Successfully rebased and updated refs/heads/feature.
</code></pre>

<p><em>Our <code>feature</code> branch starts now from <code>master</code> head commit and now git is replaying all the commit from our <code>feature</code> branch from this point.</em></p>

<p>The result is the following:</p>

<p>The file <code>README.ms</code> now contains the commits from <code>master</code> + the commit from <code>feature</code>.</p>

<h2 id="let%27s-check-feature-branch-content">Let's check feature branch content</h2>

<pre><code>cat README.md 
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
introducing a new feature
</code></pre>

<h2 id="let%27s-check-%60master%60-branch-content">Let's check <code>master</code> branch content</h2>

<pre><code>git checkout master 
</code></pre>

<p>output:</p>

<pre><code>Switched to branch 'master'


cat README.md
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
</code></pre>

<h2 id="check-repo-graph">Check repo graph</h2>

<pre><code>nohup gitg &amp;
</code></pre>

<p><img src="/images/git-rebase/graph2.png" alt="screenshot" /></p>

<h2 id="usage%3A-getting-changes-from-origin%2Fbranch-on-branch">Usage: getting changes from origin/branch on branch</h2>

<p>Retrieve changes from origin:</p>

<pre><code>git fetch
</code></pre>

<p>apply commit from that:</p>

<pre><code>git checkout master
git rebase origin/master
</code></pre>
]]></content>
        </entry>
    </feed>