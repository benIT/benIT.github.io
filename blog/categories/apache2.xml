<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/apache2.xml" rel="self"/>
    <link href="/"/>
    <updated>2019-10-04T13:34:30+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Configure an apache2 SSL virtual host from a P12 certificate]]></title>
            <link href="/blog/2019/10/01/from-a-p12-certificate-to-apache-ssl"/>
            <updated>2019-10-01T00:00:00+00:00</updated>
            <id>/blog/2019/10/01/from-a-p12-certificate-to-apache-ssl</id>
            <content type="html"><![CDATA[<p><a href="https://www.tbs-certificats.com/FAQ/fr/346.html">source article</a></p>

<h2 id="about-pkcs_12">About PKCS_12</h2>

<p><a href="https://en.wikipedia.org/wiki/PKCS_12">Wikipedia</a>:</p>

<p>In cryptography, PKCS #12 defines an archive file format for storing many cryptography objects as a single file. It is commonly used to bundle a private key with its X.509 certificate or to bundle all the members of a chain of trust.</p>

<h2 id="get-certificate-and-private-key-from-p12-file">Get certificate and private key from P12 file</h2>

<pre><code>openssl pkcs12 -in file.p12 -out package.pem -nodes
cp package.pem myapp.domain.fr.key
cp package.pem myapp.domain.fr.cert
</code></pre>

<h3 id="extract-certificate">Extract certificate</h3>

<p>Edit <code>myapp.domain.fr.key</code> and keep only the certificate section from <code>-----BEGIN CERTIFICATE-----</code> to <code>-----END CERTIFICATE-----</code></p>

<h3 id="extract-private-key">Extract private key</h3>

<p>Edit <code>myapp.domain.fr.key</code> and keep only the certificate section from <code>-----BEGIN PRIVATE KEY-----</code> to <code>-----BEGIN PRIVATE KEY-----</code></p>

<h2 id="%C2%A0configure-your-webserver">Â Configure your webserver</h2>

<h3 id="move-files">Move files</h3>

<pre><code>mv myapp.domain.fr.cert /etc/ssl/certs/
mv myapp.domain.fr.key /etc/ssl/private
</code></pre>

<h4 id="configure-your-virtual-host">Configure your virtual host</h4>

<pre><code>SSLCertificateFile  /etc/ssl/certs/myapp.domain.fr.cert
SSLCertificateKeyFile /etc/ssl/private/myapp.domain.fr.key
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Run multiple php versions on the same server with PHP-FPM and apache2]]></title>
            <link href="/blog/2019/09/19/run-multiple-php-versions-same-server-with-fpm"/>
            <updated>2019-09-19T00:00:00+00:00</updated>
            <id>/blog/2019/09/19/run-multiple-php-versions-same-server-with-fpm</id>
            <content type="html"><![CDATA[<h2 id="purpose">Purpose</h2>

<p>The aim of this post is to run several php versions on the same server.</p>

<p>This installation has been performed on debian 9 stretch.</p>

<p>This post has been mainly inspired <a href="https://tecadmin.net/install-multiple-php-version-apache-ubuntu/">from this source</a></p>

<h2 id="about-%60php-fpm%60">About <code>php-fpm</code></h2>

<p>PHP-FPM (FastCGI Process Manager) allows communication between a webserver and a PHP process based on FastCGI protocol.</p>

<p>In this post, PHP-FPM listen to a socket file to communicate with apache.</p>

<h2 id="add-%60sury%60-repo-to-get-both-%60php-5.6%60-and-%60php7.x%60-packages">Add <code>sury</code> repo to get both <code>php-5.6</code> and <code>php7.x</code> packages</h2>

<p>Since debian strech did not have php5 packages, we have to add an extra repo to our apt sources.list to get those packages (<a href="https://stackoverflow.com/questions/46378017/install-php5-6-in-debian-9">source here</a>):</p>

<pre><code>apt-get install apt-transport-https lsb-release ca-certificates
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg --no-check-certificate
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" &gt; /etc/apt/sources.list.d/php.list
apt-get update
</code></pre>

<h2 id="about-the-apache2-library-that-communicates-with-php-fpm-process">About the apache2 library that communicates with php fpm process</h2>

<p>These libs are not required anymore: <code>libapache2-mod-fastcgi</code>, <code>libapache2-mod-fcgid</code> since there are now <code>proxy_fcgi</code> and <code>proxy</code> apache modules.</p>

<h3 id="apache2-modules">Apache2 modules</h3>

<pre><code>a2enmod actions alias proxy_fcgi
</code></pre>

<h2 id="install-php-fpm-module-for-php-5.6">Install php fpm module for php 5.6</h2>

<pre><code>apt-get install php5.6-fpm
</code></pre>

<p>Checkout in <code>/etc/php/5.6/fpm/pool.d/www.conf</code> the directive that contains the socket path where php-fpm is listening:</p>

<pre><code>listen = /run/php/php5.6-fpm.sock
</code></pre>

<h2 id="install-php-fpm-module-for-php-7.1">Install php fpm module for php 7.1</h2>

<pre><code>apt-get install php7.1-fpm
</code></pre>

<p>Checkout in <code>/etc/php/7.1/fpm/pool.d/www.conf</code> the directive that contains the socket path where php-fpm is listening:</p>

<pre><code>listen = /run/php/php7.1-fpm.sock
</code></pre>

<h2 id="test">Test</h2>

<h3 id="create-test-apps">Create test apps</h3>

<pre><code>mkdir -p /var/www/html/php5.6 /var/www/html/php7.1
echo "&lt;?php phpinfo(); ?&gt;" &gt; /var/www/php56/index.php
echo "&lt;?php phpinfo(); ?&gt;" &gt; /var/www/php71/index.php
</code></pre>

<h3 id="virtual-hosts">Virtual hosts</h3>

<pre><code>a2dissite 000-default.conf    
</code></pre>

<h3 id="edit-local-dns-file">Edit local DNS file</h3>

<p>Edit <code>/etc/hosts</code>:</p>

<pre><code>10.11.12.13 php56.test
10.11.12.13 php71.test
</code></pre>

<h4 id="php-5.6-virtual-host">PHP 5.6 virtual host</h4>

<pre><code>cp 000-default.conf php56.conf 
a2ensite php56.conf
</code></pre>

<p>Edit <code>/etc/apache2/sites-available/php56.conf</code>:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerName php56.test
    DocumentRoot /var/www/php56
    &lt;Directory /var/www/php56&gt;
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    &lt;/Directory&gt;
    &lt;FilesMatch \.php$&gt;
        # Apache 2.4.10+ can proxy to unix socket
        SetHandler "proxy:unix:/var/run/php/php5.6-fpm.sock|fcgi://localhost/"
    &lt;/FilesMatch&gt;
    ErrorLog ${APACHE_LOG_DIR}/php56-error.log
    CustomLog ${APACHE_LOG_DIR}/php56-access.log combined
&lt;/VirtualHost&gt;
</code></pre>

<p>Reload :</p>

<pre><code>systemctl reload apache2    
</code></pre>

<p>Check with your browser:</p>

<p><img src="/images/multiple-php-versions/56.png" alt="screenshot" /></p>

<h4 id="php-7.1-virtual-host">PHP 7.1 virtual host</h4>

<pre><code>cp 000-default.conf php71.conf
a2ensite php71.conf
</code></pre>

<p>Edit <code>/etc/apache2/sites-available/php71.conf</code>:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerName php56.test
    DocumentRoot /var/www/php56
    &lt;Directory /var/www/php56&gt;
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    &lt;/Directory&gt;
    &lt;FilesMatch \.php$&gt;
        # Apache 2.4.10+ can proxy to unix socket
        SetHandler "proxy:unix:/var/run/php/php7.1-fpm.sock|fcgi://localhost/"
    &lt;/FilesMatch&gt;
    ErrorLog ${APACHE_LOG_DIR}/php71-error.log
    CustomLog ${APACHE_LOG_DIR}/php71-access.log combined
&lt;/VirtualHost&gt;    
</code></pre>

<p>Reload :</p>

<pre><code>systemctl reload apache2    
</code></pre>

<p>Check with your browser:</p>

<p><img src="/images/multiple-php-versions/71.png" alt="screenshot" /></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Apache2 survival sheet]]></title>
            <link href="/blog/2017/10/02/apache2-survival-sheet"/>
            <updated>2017-10-02T00:00:00+00:00</updated>
            <id>/blog/2017/10/02/apache2-survival-sheet</id>
            <content type="html"><![CDATA[<h2 id="virtual-hosts">Virtual hosts</h2>

<p>Virtual hosts allow to run several sites on the same server.</p>

<h3 id="several-sites-on-the-same-machine">Several sites on the same machine</h3>

<p>Make use of the <code>ServerName</code> directive to match the right site.</p>

<p>In <code>/etc/apache2/sites-enabled/foo.conf</code>:</p>

<pre><code>    &lt;VirtualHost *:80&gt; 
            ServerName foo.local
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/foo/
            ErrorLog /foo.log
            CustomLog /access-foo.log combined
    &lt;/VirtualHost&gt;
</code></pre>

<p>In <code>/etc/apache2/sites-enabled/bar.conf</code>:</p>

<pre><code>    &lt;VirtualHost *:80&gt; 
            ServerName bar.local
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/bar/
            ErrorLog /bar.log
            CustomLog /access-bar.log combined
    &lt;/VirtualHost&gt; 
</code></pre>

<p>When an http request corresponding to the <code>ServerName</code> value is received, the right answer is served according to the vhost.conf.</p>

<h3 id="enable-a-vhost">Enable a vhost</h3>

<pre><code>a2ensite video-app
</code></pre>

<h3 id="disable--a-vhost">Disable  a vhost</h3>

<pre><code>a2dissite video-app
</code></pre>

<h2 id="modules">Modules</h2>

<h3 id="list-enables%2Floaded-modules">List enables/loaded modules</h3>

<pre><code>apache2ctl -M
</code></pre>

<h3 id="enable-a-module">Enable a module</h3>

<pre><code>sudo a2enmod rewrite
</code></pre>

<h2 id="server-status">Server status</h2>

<pre><code>apache2ctl status
</code></pre>

<h2 id="security">Security</h2>

<h3 id="hide-server-version">Hide server version</h3>

<p>In <code>/etc/apache2/conf-available/security.conf</code>:</p>

<pre><code>ServerTokens Prod
ServerSignature Off
</code></pre>

<h3 id="prevent-site-encapsulation-in-an-external-iframe">Prevent site encapsulation in an external iframe</h3>

<p>In <code>/etc/apache2/conf-available/security.conf</code>:</p>

<pre><code>Leader set X-Frame-Options: "sameorigin" 
</code></pre>

<h3 id="secure-a-vhost-with-a-basic-authentication">Secure a vhost with a basic authentication</h3>

<p>install utils:</p>

<pre><code>apt-get install apache2 apache2-utils
</code></pre>

<p>Generate password for user ben:</p>

<pre><code>htpasswd -c /etc/apache2/.htpasswd ben

cat /etc/apache2/.htpasswd
</code></pre>

<p>output:</p>

<pre><code> ben:$apr1$ULdWsbYp$eawlgBJZvKhr7L8V1NWGD/
</code></pre>

<p>Secure your vhost:</p>

<pre><code>    LISTEN 10000 
    &lt;VirtualHost *:10000&gt; 
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/videoapp/web/
             &lt;Directory /home/pi/projects/videoapp&gt;
                    Options Indexes FollowSymLinks
                    AllowOverride All
                    AuthType Basic
                    AuthName "Restricted Content"
                    AuthUserFile /etc/apache2/.htpasswd
                    Require valid-user
            &lt;/Directory&gt;
            ErrorLog /error-videoapp.log
            CustomLog /access-videoapp.log combined
    &lt;/VirtualHost&gt;
</code></pre>
]]></content>
        </entry>
    </feed>